-- database: /Users/lachlan/Documents/Handball-Website/matchmaking/resources/database.db

-- Use the â–· button in the top right corner to run the entire file.

SELECT  -- get all unfinished games
    serving.name, receiving.name, servingScore, receivingScore, games.id
    FROM games 
    INNER JOIN teams AS serving ON games.servingTeam = serving.id 
    INNER JOIN teams as receiving ON games.receivingTeam = receiving.id 
    WHERE tournamentId = 8 
    AND games.bestPlayer = NULL;

-- this will be a doozey, but we need to get the finals of a game if there are finals, but if there are not then
SELECT 
    serving.name, receiving.name, servingScore, receivingScore, games.id
    FROM games 
    INNER JOIN teams AS serving ON games.servingTeam = serving.id 
    INNER JOIN teams as receiving ON games.receivingTeam = receiving.id 
    WHERE tournamentId = 8 AND
    CASE 
        WHEN (SELECT count(*) FROM games WHERE tournamentId = 8 AND isFinal = 1) > 0 THEN
            isFinal = 1
        ELSE
            round = (SELECT max(round) FROM games WHERE tournamentId = 8) 
    END;


-- get umpire name from umpire id:
SELECT 
    umpire.name
    FROM games
    LEFT JOIN officials AS u ON games.official = u.id
        LEFT JOIN people AS umpire ON u.personId = umpire.id;
    

SELECT 
    serving.name, receiving.name, servingScore, receivingScore, games.id, round, umpire.name, scorer.name, court 
    FROM games 
    INNER JOIN teams AS serving ON games.servingTeam = serving.id 
    INNER JOIN teams AS receiving ON games.receivingTeam = receiving.id
    LEFT JOIN officials AS u ON games.official = u.id
        LEFT JOIN people AS umpire ON u.personId = umpire.id
    LEFT JOIN officials AS s ON games.scorer = s.id
        LEFT JOIN people AS scorer ON s.personId = scorer.id
    WHERE
        tournamentId = 7 AND
        isFinal = 0;

SELECT
    twoCourts, count(scorer)>0
    FROM tournaments
    INNER JOIN games ON games.tournamentId = tournaments.id
    WHERE tournaments.id = 3;

SELECT 
    name, searchableName, 
        case 
            when imageURL is null 
                then "/api/teams/image?name=blank" 
            else 
                imageURL
        end  
    FROM teams 
    INNER JOIN tournamentTeams ON teams.id = tournamentTeams.teamId 
    WHERE tournamentId = 8;

SELECT 
    t.name, sum(s.started), sum(s.servingScore - s.receivingScore)
    FROM 
        teams as t 
        INNER JOIN games as s ON s.servingTeam = t.id OR s.receivingTeam = t.id
    WHERE 
        s.tournamentId = 7 --OR 
        --r.tournamentId = 7
    GROUP BY(t.name);

SELECT 
    teams.name, count(s.id)+count(r.id) as games
    FROM teams
    INNER JOIN games as s on s.servingTeam = teams.id
    INNER JOIN games as r on r.receivingTeam = teams.id
    WHERE 
        s.tournamentId = 7 AND
        (
            s.servingTeam = teams.id OR
            s.receivingTeam = teams.id
        )
    GROUP BY teams.name;

SELECT 
    teams.name, 
    COUNT(games.id) as played,
    SUM(
        CASE 
            WHEN games.servingTeam = teams.id 
            THEN games.servingScore > games.receivingScore
            ELSE games.receivingScore > games.servingScore 
        END
    ) as wins,
    SUM(
        CASE 
            WHEN games.servingTeam = teams.id 
            THEN games.servingScore > games.receivingScore
            ELSE games.receivingScore > games.servingScore 
        END
    ) / CAST(COUNT(games.id) as REAL) as percentage,
    SUM(
        CASE 
            WHEN games.servingTeam = teams.id 
            THEN games.servingScore 
            ELSE games.receivingScore 
        END
    ) AS total_points,
    SUM(
        CASE 
            WHEN games.servingTeam = teams.id 
            THEN games.servingScore < games.receivingScore
            ELSE games.receivingScore < games.servingScore 
        END
    ) as losses,
    SUM(
        p.faults
    ) as losses
FROM teams
INNER JOIN games ON games.servingTeam = teams.id OR games.receivingTeam = teams.id
INNER JOIN playerGameStats as p ON p.gameId = games.id
WHERE 
    games.tournamentId = 7 AND
    games.isFinal = 0 AND
    games.isBye = 0
GROUP BY teams.name;

    